year <- 2001
month <- 05
uri <- paste0(base.uri.1, year, "/" ,month, base.uri.2, api.key)
news.data <- fromJSON(content(GET(uri), "text"))
news.data.response <- news.data$response
news.data.response.docs <- news.data.response$docs
news.data.response.docs.headline <- news.data.response.docs$headline
news.data.response.docs.keywords <- news.data.response.docs$keywords
news.data.table <- data.frame(news.data.response.docs$pub_date,
news.data.response.docs.headline$main, news.data.response.docs$section_name)
colnames(news.data.table) <- c("Publication Date", "Headline", "Section")
news.data.table$Headline <- paste0("<a href='",news.data.response.docs$web_url,"'>",news.data.table$Headline,"</a>")
news.data.table$`Publication Date` <- str_sub(news.data.table$`Publication Date`, 1, 10)
news.data.table$Day <- str_sub(news.data.table$`Publication Date`, 9, 10)
news.data.table$Section <- str_replace_na(news.data.table$Section, replacement = "Other")
news.data.table.final <- filter(news.data.table, news.data.table$Day == 01)
View(news.data.table.final)
news.data.response <- news.data$response
news.data.response.docs <- news.data.response$docs
news.data.response.docs.headline <- news.data.response.docs$headline
news.data.response.docs.keywords <- news.data.response.docs$keywords
news.data.table <- data.frame(news.data.response.docs$pub_date,
news.data.response.docs.headline$main, news.data.response.docs$section_name)
colnames(news.data.table) <- c("Publication Date", "Headline", "Section")
news.data.table$Headline <- paste0("<a href='",news.data.response.docs$web_url,"'>",news.data.table$Headline,"</a>")
news.data.table$`Publication Date` <- str_sub(news.data.table$`Publication Date`, 1, 10)
news.data.table$Day <- str_sub(news.data.table$`Publication Date`, 9, 10)
news.data.table$Section <- str_replace_na(news.data.table$Section, replacement = "Other")
View(news.data.table.final)
View(news.data.table)
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
shiny::runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")+
geom_smooth(mapping = aes(x = Section, y = Count, colour = Section))
ggplotly(plot)
library("httr")
library("jsonlite")
library("dplyr")
library("stringr")
library("ggplot2")
library("plotly")
base.uri.1 <- "http://api.nytimes.com/svc/archive/v1/"
base.uri.1 <- "http://api.nytimes.com/svc/archive/v1/"
base.uri.2 <- ".json?api-key="
api.key <- "3d4af681d88646f5afb0b40f2a1e510b"
year <- 2001
month <- 05
uri <- paste0(base.uri.1, year, "/" ,month, base.uri.2, api.key)
news.data <- fromJSON(content(GET(uri), "text"))
news.data.response <- news.data$response
news.data.response.docs <- news.data.response$docs
news.data.response.docs.headline <- news.data.response.docs$headline
news.data.response.docs.keywords <- news.data.response.docs$keywords
news.data.table <- data.frame(news.data.response.docs$pub_date,
news.data.response.docs.headline$main, news.data.response.docs$section_name)
colnames(news.data.table) <- c("Publication Date", "Headline", "Section")
news.data.table$Headline <- paste0("<a href='",news.data.response.docs$web_url,"'>",news.data.table$Headline,"</a>")
news.data.table$`Publication Date` <- str_sub(news.data.table$`Publication Date`, 1, 10)
news.data.table$Day <- str_sub(news.data.table$`Publication Date`, 9, 10)
View(news.data.table)
news.data.table$Section <- str_replace_na(news.data.table$Section, replacement = "Other")
data.plot <- group_by(news.data.table, Section) %>%
summarise(Count = n())
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")+
geom_smooth(mapping = aes(x = Section, y = Count, colour = Section))
ggplotly(plot)
plot2 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot2)
plot3 <- ggplot(data = data.plot) +
geom_(mapping = aes(x = Count), color = "BLUE", stat = count)
ggplotly(plot3)
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")+
geom_smooth(mapping = aes(x = Section, y = Count, colour = Section))
ggplotly(plot)
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")+
ggplotly(plot)
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")+
ggplotly(plot)
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")
ggplotly(plot)
plot3 <- ggplot(data = data.plot) +
geom_line(mapping = aes(x = Count), color = "BLUE", stat = count)
ggplotly(plot3)
plot3 <- ggplot(data = data.plot) +
geom_line(mapping = aes(x = Count), color = "BLUE", stat = count)
ggplotly(plot3)
plot3 <- ggplot(data = data.plot) +
geom_line(mapping = aes(x = Count), color = "BLUE", stat = count)
plot3 <- ggplot(data = data.plot) +
geom_line(mapping = aes(x = Count), color = "BLUE")
ggplotly(plot3)
plot3 <- ggplot(data = data.plot) +
geom_line(mapping = aes(x = Section, y = Count), color = "BLUE")
ggplotly(plot3)
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")
ggplotly(plot)
news.data.table <- filter(news.data.table, news.data.table$Day == "06")
data.plot <- group_by(news.data.table, Section) %>%
summarise(Count = n())
plot <- ggplot(data = data.plot) +
geom_point(mapping = aes(x = Section, y = Count), color = "BLUE")
ggplotly(plot)
plot2 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot2)
data.plot <- group_by(news.data.table, Section)
plot2 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot2)
data.plot2 <- group_by(Count = n())
plot2 <- ggplot(data = news.data.table) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot2)
plot2 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot2)
data.plot <- group_by(news.data.table, Section)
View(data.plot)
data.plot2 <- summarise(data.plot,
Count = n(Section))
data.plot2 <- summarise(data.plot,
Count = n())
data.plot2
plot2 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = length(data.plot2$Count)))
ggplotly(plot2)
data.plot2 <- summarise(data.plot,
Count = n()) %>%
arrange(-Count)
plot3 <- ggplot(data = data.plot2[1:10, ]) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot3)
plot3 <- ggplot(data = data.plot2) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot3)
plot3 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot3)
plot3 <- ggplot(data = data.plot2) +
geom_bar(mapping = aes(x = Count))
ggplotly(plot3)
plot3 <- ggplot(data = data.plot2) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot3)
plot3 <- ggplot(data = data.plot2[1,10, ]) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot3)
plot3 <- ggplot(data = data.plot2[1:10, ]) +
geom_bar(mapping = aes(x = Section))
ggplotly(plot3)
plot3 <- ggplot(data = data.plot2[1:10, ]) +
geom_bar(mapping = aes(x = Count))
ggplotly(plot3)
data.plot3 <- filter(data.plot, Section == data.plot2[1:10, 1])
data.plot3 <- filter(data.plot, Section == data.plot2[1:10, ])
top.10 <- data.plot2[1:10, 1]
View(top.10)
data.plot3 <- filter(data.plot, Section == top.10$Section)
top.10 <- data.plot2$Section[1:10]
View(top.10)
data.plot3 <- filter(data.plot, Section %in% top.10)
View(data.plot3)
data.plot3 <- filter(data.plot, Section %in% top.10) %>%
group_by(Section) %>%
summarise(Count = n())
View(data.plot3)
plot2 <- ggplot(data = data.plot3) +
geom_bar(mapping = aes(x = section), fill = rainbow(n = 10), stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data = data.plot3) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = 10), stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data = data.plot3) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = 10), stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("", y = value, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("", y = Section, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes(x = Section, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("","", fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("", y = length(Section), fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("", y = length(Section), fill = Section)) +
geom_bar(stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("", y = length(Section)) +
geom_bar(stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("", y = length(Section)) +
geom_bar(stat = "identity")
plot2 <- ggplot(data.plot3, aes("", y = length(Section)))+
geom_bar(stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(data.plot3, aes("", y = Section, fill = length(Section)))+
geom_bar(stat = "identity")
ggplotly(plot2)
top.10 <- data.plot2[1:10, ]
View(top.10)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section))+
geom_bar(stat = "identity")
ggplotly(plot2)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section))+
geom_bar(stat = "identity")
pie <- plot2 + coord_polar("y", start=0)
ggplotly(pie)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section))+
geom_bar(stat = "identity")
pie <- plot2 + coord_polar("y", start=0)
ggplotly(pie)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section))+
geom_bar(stat = "identity")
pie <- plot2 + coord_polar("y", start=0)
ggplotly(pie)
pie
pie
pie
pie
pie
pie
pie
pie
pie
pie
pie
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(stat = "identity")
pie <- plot2 + coord_polar("y", start=0)
pie
View(pie)
pie
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y")
ggplotly(plot2)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y")
ggplotly(plot2)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplotly(plot2)
ggplotly(plot2)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity")
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity")
library("httr")
library("jsonlite")
library("dplyr")
library("stringr")
library("ggplot2")
library("plotly")
base.uri.1 <- "http://api.nytimes.com/svc/archive/v1/"
base.uri.2 <- ".json?api-key="
api.key <- "3d4af681d88646f5afb0b40f2a1e510b"
year <- 2001
month <- 05
uri <- paste0(base.uri.1, year, "/" ,month, base.uri.2, api.key)
news.data <- fromJSON(content(GET(uri), "text"))
news.data.response <- news.data$response
news.data.response.docs <- news.data.response$docs
news.data.response.docs.headline <- news.data.response.docs$headline
news.data.response.docs.keywords <- news.data.response.docs$keywords
news.data.table <- data.frame(news.data.response.docs$pub_date,
news.data.response.docs.headline$main, news.data.response.docs$section_name)
colnames(news.data.table) <- c("Publication Date", "Headline", "Section")
news.data.table$Headline <- paste0("<a href='",news.data.response.docs$web_url,"'>",news.data.table$Headline,"</a>")
news.data.table$`Publication Date` <- str_sub(news.data.table$`Publication Date`, 1, 10)
news.data.table$Day <- str_sub(news.data.table$`Publication Date`, 9, 10)
View(news.data.table)
news.data.table$Section <- str_replace_na(news.data.table$Section, replacement = "Other")
news.data.table <- filter(news.data.table, news.data.table$Day == "06")
data.plot <- group_by(news.data.table, Section)
data.plot2 <- summarise(data.plot,
Count = n()) %>%
arrange(-Count)
top.10 <- data.plot2[1:10, ]
plot1 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = length(data.plot2$Count)))
ggplotly(plot1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") #+
ggplotly(plot2)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplotly(plot2)
plot1 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = length(data.plot2$Count)))
ggplotly(plot1)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplotly(plot2)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0, direction = 1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar()
library("httr")
library("jsonlite")
library("dplyr")
library("stringr")
library("ggplot2")
library("plotly")
base.uri.1 <- "http://api.nytimes.com/svc/archive/v1/"
base.uri.2 <- ".json?api-key="
api.key <- "3d4af681d88646f5afb0b40f2a1e510b"
year <- 2001
month <- 05
uri <- paste0(base.uri.1, year, "/" ,month, base.uri.2, api.key)
news.data <- fromJSON(content(GET(uri), "text"))
news.data.response <- news.data$response
news.data.response.docs <- news.data.response$docs
news.data.response.docs.headline <- news.data.response.docs$headline
news.data.response.docs.keywords <- news.data.response.docs$keywords
news.data.table <- data.frame(news.data.response.docs$pub_date,
news.data.response.docs.headline$main, news.data.response.docs$section_name)
colnames(news.data.table) <- c("Publication Date", "Headline", "Section")
news.data.table$Headline <- paste0("<a href='",news.data.response.docs$web_url,"'>",news.data.table$Headline,"</a>")
news.data.table$`Publication Date` <- str_sub(news.data.table$`Publication Date`, 1, 10)
news.data.table$Day <- str_sub(news.data.table$`Publication Date`, 9, 10)
View(news.data.table)
news.data.table$Section <- str_replace_na(news.data.table$Section, replacement = "Other")
news.data.table <- filter(news.data.table, news.data.table$Day == "06")
data.plot <- group_by(news.data.table, Section)
data.plot2 <- summarise(data.plot,
Count = n()) %>%
arrange(-Count)
top.10 <- data.plot2[1:10, ]
plot1 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = length(data.plot2$Count)))
ggplotly(plot1)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar()
ggplotly(plot2)
ggplot(top.10, aes(x = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar()
ggplot(top.10, aes(x = Count)) +
geom_bar(width = 1, stat = "identity") +
coord_polar()
plot2 <- ggplot(top.10, aes(x = Count)) +
geom_bar(width = 1, stat = "identity")
pie <- plot2 + coord_polar()
ggplotly(pie)
ggplotly(pie)
plot2 <- ggplot(top.10, aes(x = Count, "")) +
geom_bar(width = 1, stat = "identity")
pie <- plot2 + coord_polar()
ggplotly(pie)
ggplotly(pie)
ggplotly(pie)
ggplotly(pie)
ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y")
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y")
ggplotly(plot2)
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y")
shiny::runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
runApp('Desktop/ASSIGNMENTS/WINTER17/INFO201/FinalProject/Project_News_Search')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("plotly")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot1 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = length(data.plot2$Count)))
ggplotly(plot1)
base.uri.1 <- "http://api.nytimes.com/svc/archive/v1/"
base.uri.2 <- ".json?api-key="
api.key <- "3d4af681d88646f5afb0b40f2a1e510b"
year <- 2001
month <- 05
uri <- paste0(base.uri.1, year, "/" ,month, base.uri.2, api.key)
news.data <- fromJSON(content(GET(uri), "text"))
news.data.response <- news.data$response
news.data.response.docs <- news.data.response$docs
news.data.response.docs.headline <- news.data.response.docs$headline
news.data.response.docs.keywords <- news.data.response.docs$keywords
news.data.table <- data.frame(news.data.response.docs$pub_date,
news.data.response.docs.headline$main, news.data.response.docs$section_name)
colnames(news.data.table) <- c("Publication Date", "Headline", "Section")
news.data.table$Headline <- paste0("<a href='",news.data.response.docs$web_url,"'>",news.data.table$Headline,"</a>")
news.data.table$`Publication Date` <- str_sub(news.data.table$`Publication Date`, 1, 10)
news.data.table$Day <- str_sub(news.data.table$`Publication Date`, 9, 10)
View(news.data.table)
news.data.table$Section <- str_replace_na(news.data.table$Section, replacement = "Other")
data.plot <- group_by(news.data.table, Section)
data.plot2 <- summarise(data.plot,
Count = n()) %>%
arrange(-Count)
top.10 <- data.plot2[1:10, ]
plot1 <- ggplot(data = data.plot) +
geom_bar(mapping = aes(x = Section), fill = rainbow(n = length(data.plot2$Count)))
ggplotly(plot1)
runApp()
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y")
plot2
plot2
plot2
plot2
plot2 <- ggplot(top.10, aes("", y = Count, fill = Section)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y")
ggplotly(plot2)
library("plotrix")
install.packages("plotrix")
library("plotrix")
pie3D(top.10$Count,labels = Section ,explode=0.1,
main="Daily top 10")
pie3D(top.10$Count,labels = top.10$Section ,explode=0.1,
main="Daily top 10")
pie3D(top.10$Count,labels = top.10$Section ,explode=0.1,
main="Daily top 10")
pie3D(top.10$Count,labels = top.10$Section ,explode=0.1,
main="Daily top 10")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
